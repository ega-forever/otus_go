version: '2'

services:
  integration_tests:
    build:
      context: .
      dockerfile: test_Dockerfile
    environment:
      TESTS_AMQP_DSN: "amqp://guest:guest@queue:5672/"
      REST_HOST: "rest"
    depends_on:
      - "rest"
      - "scan"
      - "notification"
    command: ["./wait-for-it.sh", "db:5432", "queue:5672", "rest:8082","--", "go", "test", "./integration_tests"]
  rest:
    image: egorzuev/rest_service:1.0.1
    ports:
      - "8082:8082"
    depends_on:
      - "db"
      - "queue"
    environment:
      - RPC_URI=0.0.0.0:8082
      - QUEUE_URI=amqp://guest:guest@queue:5672
      - DB_URI=postgres://user:123@db:5432/otus
    command: ["./wait-for-it.sh", "db:5432", "queue:5672","--", "./service_rest", "grpc_server", "database"]
  scan:
    image: egorzuev/scan_service:1.0.1
    ports:
      - "8081:8081"
    depends_on:
      - "db"
      - "queue"
    environment:
      - QUEUE_URI=amqp://guest:guest@queue:5672
      - DB_URI=postgres://user:123@db:5432/otus
    command: ["./wait-for-it.sh", "db:5432", "queue:5672","--", "./service_scan", "scan", "10", "20"]
  notification:
    image: egorzuev/notification_service:1.0.1
    ports:
      - "8080:8080"
    depends_on:
      - "queue"
      - "scan"
    environment:
      - QUEUE_URI=amqp://guest:guest@queue:5672
    command: ["./wait-for-it.sh", "queue:5672", "scan:8081","--", "./service_notification", "scan"]
  db:
    image: postgres:9.6
    container_name: "postgres_db"
    environment:
      - POSTGRES_DB=otus
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=123
    ports:
      - "5432:5432"
  queue:
    image: rabbitmq:3.7
    container_name: "rabbitmq_queue"
    ports:
      - "5672:5672"