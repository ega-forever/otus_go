// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/event.proto

package event

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4968de0eb937c14, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Event) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Event) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type CreateEventReq struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEventReq) Reset()         { *m = CreateEventReq{} }
func (m *CreateEventReq) String() string { return proto.CompactTextString(m) }
func (*CreateEventReq) ProtoMessage()    {}
func (*CreateEventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4968de0eb937c14, []int{1}
}

func (m *CreateEventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventReq.Unmarshal(m, b)
}
func (m *CreateEventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventReq.Marshal(b, m, deterministic)
}
func (m *CreateEventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventReq.Merge(m, src)
}
func (m *CreateEventReq) XXX_Size() int {
	return xxx_messageInfo_CreateEventReq.Size(m)
}
func (m *CreateEventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventReq proto.InternalMessageInfo

func (m *CreateEventReq) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type CreateEventRes struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEventRes) Reset()         { *m = CreateEventRes{} }
func (m *CreateEventRes) String() string { return proto.CompactTextString(m) }
func (*CreateEventRes) ProtoMessage()    {}
func (*CreateEventRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4968de0eb937c14, []int{2}
}

func (m *CreateEventRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventRes.Unmarshal(m, b)
}
func (m *CreateEventRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventRes.Marshal(b, m, deterministic)
}
func (m *CreateEventRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventRes.Merge(m, src)
}
func (m *CreateEventRes) XXX_Size() int {
	return xxx_messageInfo_CreateEventRes.Size(m)
}
func (m *CreateEventRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventRes.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventRes proto.InternalMessageInfo

func (m *CreateEventRes) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type UpdateEventReq struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEventReq) Reset()         { *m = UpdateEventReq{} }
func (m *UpdateEventReq) String() string { return proto.CompactTextString(m) }
func (*UpdateEventReq) ProtoMessage()    {}
func (*UpdateEventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4968de0eb937c14, []int{3}
}

func (m *UpdateEventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEventReq.Unmarshal(m, b)
}
func (m *UpdateEventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEventReq.Marshal(b, m, deterministic)
}
func (m *UpdateEventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEventReq.Merge(m, src)
}
func (m *UpdateEventReq) XXX_Size() int {
	return xxx_messageInfo_UpdateEventReq.Size(m)
}
func (m *UpdateEventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEventReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEventReq proto.InternalMessageInfo

func (m *UpdateEventReq) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type UpdateEventRes struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEventRes) Reset()         { *m = UpdateEventRes{} }
func (m *UpdateEventRes) String() string { return proto.CompactTextString(m) }
func (*UpdateEventRes) ProtoMessage()    {}
func (*UpdateEventRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4968de0eb937c14, []int{4}
}

func (m *UpdateEventRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEventRes.Unmarshal(m, b)
}
func (m *UpdateEventRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEventRes.Marshal(b, m, deterministic)
}
func (m *UpdateEventRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEventRes.Merge(m, src)
}
func (m *UpdateEventRes) XXX_Size() int {
	return xxx_messageInfo_UpdateEventRes.Size(m)
}
func (m *UpdateEventRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEventRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEventRes proto.InternalMessageInfo

func (m *UpdateEventRes) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type DeleteEventReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEventReq) Reset()         { *m = DeleteEventReq{} }
func (m *DeleteEventReq) String() string { return proto.CompactTextString(m) }
func (*DeleteEventReq) ProtoMessage()    {}
func (*DeleteEventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4968de0eb937c14, []int{5}
}

func (m *DeleteEventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEventReq.Unmarshal(m, b)
}
func (m *DeleteEventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEventReq.Marshal(b, m, deterministic)
}
func (m *DeleteEventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEventReq.Merge(m, src)
}
func (m *DeleteEventReq) XXX_Size() int {
	return xxx_messageInfo_DeleteEventReq.Size(m)
}
func (m *DeleteEventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEventReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEventReq proto.InternalMessageInfo

func (m *DeleteEventReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteEventRes struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEventRes) Reset()         { *m = DeleteEventRes{} }
func (m *DeleteEventRes) String() string { return proto.CompactTextString(m) }
func (*DeleteEventRes) ProtoMessage()    {}
func (*DeleteEventRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4968de0eb937c14, []int{6}
}

func (m *DeleteEventRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEventRes.Unmarshal(m, b)
}
func (m *DeleteEventRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEventRes.Marshal(b, m, deterministic)
}
func (m *DeleteEventRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEventRes.Merge(m, src)
}
func (m *DeleteEventRes) XXX_Size() int {
	return xxx_messageInfo_DeleteEventRes.Size(m)
}
func (m *DeleteEventRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEventRes.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEventRes proto.InternalMessageInfo

func (m *DeleteEventRes) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetEventReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventReq) Reset()         { *m = GetEventReq{} }
func (m *GetEventReq) String() string { return proto.CompactTextString(m) }
func (*GetEventReq) ProtoMessage()    {}
func (*GetEventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4968de0eb937c14, []int{7}
}

func (m *GetEventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventReq.Unmarshal(m, b)
}
func (m *GetEventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventReq.Marshal(b, m, deterministic)
}
func (m *GetEventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventReq.Merge(m, src)
}
func (m *GetEventReq) XXX_Size() int {
	return xxx_messageInfo_GetEventReq.Size(m)
}
func (m *GetEventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventReq proto.InternalMessageInfo

func (m *GetEventReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetEventRes struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventRes) Reset()         { *m = GetEventRes{} }
func (m *GetEventRes) String() string { return proto.CompactTextString(m) }
func (*GetEventRes) ProtoMessage()    {}
func (*GetEventRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4968de0eb937c14, []int{8}
}

func (m *GetEventRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventRes.Unmarshal(m, b)
}
func (m *GetEventRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventRes.Marshal(b, m, deterministic)
}
func (m *GetEventRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventRes.Merge(m, src)
}
func (m *GetEventRes) XXX_Size() int {
	return xxx_messageInfo_GetEventRes.Size(m)
}
func (m *GetEventRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventRes proto.InternalMessageInfo

func (m *GetEventRes) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ListEventReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEventReq) Reset()         { *m = ListEventReq{} }
func (m *ListEventReq) String() string { return proto.CompactTextString(m) }
func (*ListEventReq) ProtoMessage()    {}
func (*ListEventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4968de0eb937c14, []int{9}
}

func (m *ListEventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEventReq.Unmarshal(m, b)
}
func (m *ListEventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEventReq.Marshal(b, m, deterministic)
}
func (m *ListEventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEventReq.Merge(m, src)
}
func (m *ListEventReq) XXX_Size() int {
	return xxx_messageInfo_ListEventReq.Size(m)
}
func (m *ListEventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEventReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListEventReq proto.InternalMessageInfo

type ListEventRes struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEventRes) Reset()         { *m = ListEventRes{} }
func (m *ListEventRes) String() string { return proto.CompactTextString(m) }
func (*ListEventRes) ProtoMessage()    {}
func (*ListEventRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4968de0eb937c14, []int{10}
}

func (m *ListEventRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEventRes.Unmarshal(m, b)
}
func (m *ListEventRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEventRes.Marshal(b, m, deterministic)
}
func (m *ListEventRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEventRes.Merge(m, src)
}
func (m *ListEventRes) XXX_Size() int {
	return xxx_messageInfo_ListEventRes.Size(m)
}
func (m *ListEventRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEventRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListEventRes proto.InternalMessageInfo

func (m *ListEventRes) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "event.Event")
	proto.RegisterType((*CreateEventReq)(nil), "event.CreateEventReq")
	proto.RegisterType((*CreateEventRes)(nil), "event.CreateEventRes")
	proto.RegisterType((*UpdateEventReq)(nil), "event.UpdateEventReq")
	proto.RegisterType((*UpdateEventRes)(nil), "event.UpdateEventRes")
	proto.RegisterType((*DeleteEventReq)(nil), "event.DeleteEventReq")
	proto.RegisterType((*DeleteEventRes)(nil), "event.DeleteEventRes")
	proto.RegisterType((*GetEventReq)(nil), "event.GetEventReq")
	proto.RegisterType((*GetEventRes)(nil), "event.GetEventRes")
	proto.RegisterType((*ListEventReq)(nil), "event.ListEventReq")
	proto.RegisterType((*ListEventRes)(nil), "event.ListEventRes")
}

func init() { proto.RegisterFile("proto/event.proto", fileDescriptor_b4968de0eb937c14) }

var fileDescriptor_b4968de0eb937c14 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x25, 0xc9, 0xd7, 0xf2, 0x75, 0x12, 0x02, 0x8e, 0x08, 0x21, 0x28, 0x84, 0xe0, 0xa1, 0xa7,
	0x8a, 0xb1, 0x78, 0xf1, 0xa8, 0x22, 0x82, 0xa7, 0x88, 0x3f, 0xa0, 0x9a, 0x39, 0x2c, 0x58, 0x1b,
	0x33, 0x4b, 0xf1, 0x6f, 0xf9, 0x0f, 0xa5, 0x93, 0x35, 0xee, 0x36, 0x11, 0x82, 0xb7, 0xd9, 0x37,
	0xef, 0xbd, 0x19, 0xde, 0xb0, 0x70, 0x50, 0x37, 0x1b, 0xbd, 0x39, 0xa3, 0x2d, 0xbd, 0xe9, 0x85,
	0xd4, 0x38, 0x91, 0x47, 0x7e, 0x0f, 0x93, 0xdb, 0x5d, 0x81, 0x31, 0xf8, 0xaa, 0x4a, 0xbc, 0xcc,
	0x9b, 0x07, 0xa5, 0xaf, 0x2a, 0x44, 0xf8, 0xa7, 0xe9, 0x43, 0x27, 0x7e, 0xe6, 0xcd, 0x67, 0xa5,
	0xd4, 0x78, 0x0c, 0x33, 0xad, 0xd6, 0xc4, 0x7a, 0xb5, 0xae, 0x93, 0x40, 0xa8, 0x3f, 0x40, 0xbe,
	0x84, 0xf8, 0xba, 0xa1, 0x95, 0x26, 0x31, 0x2c, 0xe9, 0x1d, 0x73, 0x68, 0xa7, 0x88, 0x6d, 0x58,
	0x44, 0x8b, 0x76, 0x81, 0xb6, 0x6f, 0x16, 0xd8, 0x57, 0xf1, 0x58, 0xd5, 0x53, 0x5d, 0xfd, 0x61,
	0x96, 0xa3, 0x1a, 0x37, 0x2b, 0x83, 0xf8, 0x86, 0x5e, 0xc9, 0x9a, 0xb5, 0x97, 0x55, 0x8f, 0xc1,
	0x3d, 0xc6, 0x09, 0x84, 0x77, 0xa4, 0x7f, 0x35, 0x38, 0xb7, 0xdb, 0xe3, 0xb6, 0x8a, 0x21, 0x7a,
	0x50, 0xdc, 0x59, 0xe6, 0x4b, 0xe7, 0xcd, 0x78, 0x0a, 0x53, 0x21, 0x72, 0xe2, 0x65, 0x41, 0xcf,
	0xc4, 0xf4, 0x8a, 0x4f, 0x1f, 0x22, 0x41, 0x1e, 0xa9, 0xd9, 0xaa, 0x17, 0xc2, 0x2b, 0x08, 0xad,
	0x73, 0xe0, 0x91, 0x51, 0xb9, 0x87, 0x4d, 0x07, 0x61, 0xde, 0x89, 0xad, 0x7c, 0x3b, 0xb1, 0x7b,
	0xa9, 0x74, 0x10, 0x16, 0xb1, 0x15, 0x62, 0x27, 0x76, 0xa3, 0x4f, 0x07, 0x61, 0xc6, 0x02, 0xfe,
	0x7f, 0x07, 0x88, 0x68, 0x28, 0x56, 0xe0, 0x69, 0x1f, 0x63, 0xbc, 0x04, 0xe8, 0x12, 0x63, 0x3c,
	0x34, 0x0c, 0x3b, 0xd4, 0x74, 0x00, 0xe4, 0xe7, 0xa9, 0x7c, 0xa0, 0x8b, 0xaf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x04, 0x1e, 0x58, 0xc7, 0x55, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	CreateEvent(ctx context.Context, in *CreateEventReq, opts ...grpc.CallOption) (*CreateEventRes, error)
	UpdateEvent(ctx context.Context, in *UpdateEventReq, opts ...grpc.CallOption) (*UpdateEventRes, error)
	DeleteEvent(ctx context.Context, in *DeleteEventReq, opts ...grpc.CallOption) (*DeleteEventRes, error)
	GetEvent(ctx context.Context, in *GetEventReq, opts ...grpc.CallOption) (*GetEventRes, error)
	ListEvents(ctx context.Context, in *ListEventReq, opts ...grpc.CallOption) (*ListEventRes, error)
}

type eventServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventServiceClient(cc *grpc.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) CreateEvent(ctx context.Context, in *CreateEventReq, opts ...grpc.CallOption) (*CreateEventRes, error) {
	out := new(CreateEventRes)
	err := c.cc.Invoke(ctx, "/event.EventService/CreateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) UpdateEvent(ctx context.Context, in *UpdateEventReq, opts ...grpc.CallOption) (*UpdateEventRes, error) {
	out := new(UpdateEventRes)
	err := c.cc.Invoke(ctx, "/event.EventService/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) DeleteEvent(ctx context.Context, in *DeleteEventReq, opts ...grpc.CallOption) (*DeleteEventRes, error) {
	out := new(DeleteEventRes)
	err := c.cc.Invoke(ctx, "/event.EventService/DeleteEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetEvent(ctx context.Context, in *GetEventReq, opts ...grpc.CallOption) (*GetEventRes, error) {
	out := new(GetEventRes)
	err := c.cc.Invoke(ctx, "/event.EventService/GetEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) ListEvents(ctx context.Context, in *ListEventReq, opts ...grpc.CallOption) (*ListEventRes, error) {
	out := new(ListEventRes)
	err := c.cc.Invoke(ctx, "/event.EventService/ListEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	CreateEvent(context.Context, *CreateEventReq) (*CreateEventRes, error)
	UpdateEvent(context.Context, *UpdateEventReq) (*UpdateEventRes, error)
	DeleteEvent(context.Context, *DeleteEventReq) (*DeleteEventRes, error)
	GetEvent(context.Context, *GetEventReq) (*GetEventRes, error)
	ListEvents(context.Context, *ListEventReq) (*ListEventRes, error)
}

// UnimplementedEventServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEventServiceServer struct {
}

func (*UnimplementedEventServiceServer) CreateEvent(ctx context.Context, req *CreateEventReq) (*CreateEventRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}
func (*UnimplementedEventServiceServer) UpdateEvent(ctx context.Context, req *UpdateEventReq) (*UpdateEventRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (*UnimplementedEventServiceServer) DeleteEvent(ctx context.Context, req *DeleteEventReq) (*DeleteEventRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEvent not implemented")
}
func (*UnimplementedEventServiceServer) GetEvent(ctx context.Context, req *GetEventReq) (*GetEventRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvent not implemented")
}
func (*UnimplementedEventServiceServer) ListEvents(ctx context.Context, req *ListEventReq) (*ListEventRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEvents not implemented")
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).CreateEvent(ctx, req.(*CreateEventReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEventReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).UpdateEvent(ctx, req.(*UpdateEventReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_DeleteEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEventReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).DeleteEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/DeleteEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).DeleteEvent(ctx, req.(*DeleteEventReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/GetEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetEvent(ctx, req.(*GetEventReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_ListEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEventReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).ListEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/ListEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).ListEvents(ctx, req.(*ListEventReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "event.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEvent",
			Handler:    _EventService_CreateEvent_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _EventService_UpdateEvent_Handler,
		},
		{
			MethodName: "DeleteEvent",
			Handler:    _EventService_DeleteEvent_Handler,
		},
		{
			MethodName: "GetEvent",
			Handler:    _EventService_GetEvent_Handler,
		},
		{
			MethodName: "ListEvents",
			Handler:    _EventService_ListEvents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/event.proto",
}
